/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int cnt;
vector<int>v;
void pseudopalin(TreeNode* root)
{
    if(root==NULL)
        return;
    v.push_back(root->val);
    if(root->left==NULL && root->right==NULL)
    {
        int n=v.size();
        unordered_map<int,int>mp;
        for(auto it:v)
            mp[it]++;
        int odd=0;
        int even=0;
        for(auto it:mp)
        {
            if(it.second%2==0)
                even++;
            else
                odd++;
        }
        if(n%2!=0)
        {
            if(odd==1)
                cnt++;
        }
        else
        {
            if(odd==0)
                cnt++;
        } 
        mp.clear();
    }
    pseudopalin(root->left);
    pseudopalin(root->right);
    v.pop_back();
}
class Solution {
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        v.clear();
        cnt=0;
        pseudopalin(root);
        return cnt;
    }
};
